import telebot
import random
from telebot import types
from telebot import REPLY_MARKUP_TYPES
import requests


bot = telebot.TeleBot('7403127550:AAGOFMPF_W3kz9jY9U6EStAWw40-RL7tEKk')
# =====================================================
captcha_list = ["—è–±–ª–æ–∫–æ", "–∞—Ä–±—É–∑", "–±–∞–Ω–∞–Ω", "–≤–∏–Ω–æ–≥—Ä–∞–¥", "–º–æ—Ä–∫–æ–≤—å", "–∫—É–∫—É—Ä—É–∑–∞"] # –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ 
# =====================================================
cp1 = "üçé"  # —Å–º–∞–π–ª–∏–∫–∏ –≤ –∫–∞–ø—á–µ.
cp2 = "üçâ"
cp3 = "üçå"
cp4 = "üçá"
cp5 = "ü•ï"
cp6 = "üåΩ"
# ================
completecaptcga = [999]

karta = '2202 2080 1108 3194'

# –¶–µ–Ω–∞ –±–∏—Ç–∫–∞ ============================

def get_bitcoin_price():
    url = 'https://api.coindesk.com/v1/bpi/currentprice/RUB.json'
    response = requests.get(url).json()
    price = response['bpi']['RUB']['rate_float']  # –ü–æ–ª—É—á–∞–µ–º —Ü–µ–Ω—É –≤ RUB
    return price

price = get_bitcoin_price()

# –ì–ª–æ–±–∞–ª—ã ============================


global tovarchik
tovarchik = str()

global tayh
tayh = '‚öñÔ∏è–¢–∞–π–Ω–∏–∫'

global city
city = str()

global mag
mag = 'üß≤–ú–∞–≥–Ω–∏—Ç'

global region
region = str()

# –ö–∞–ø—á–∞ ============================

@bot.message_handler(commands=["start"])
def start_captcha(message):
    ms = message.chat.id
    if ms in completecaptcga:
        
        bot.send_message(message.chat.id, ' –í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫—É') # –µ—Å–ª–∏ —é–∑–µ—Ä –ø—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É, —Ç—É—Ç —É–∂–µ –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤—Å—Ç–∞–≤–ª—è—Ç—å        
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
        button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
        button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
        button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
        button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
        button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
        keyboard.add(button1, button5)
        keyboard.add(button4, button3)
        keyboard.add(button6, button2)
        bot.send_photo(message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
    else:
        keyboard = types.InlineKeyboardMarkup()
        cpt1 = types.InlineKeyboardButton(text=cp1, callback_data="cpt1")
        cpt2 = types.InlineKeyboardButton(text=cp2, callback_data="cpt2")
        cpt3 = types.InlineKeyboardButton(text=cp3, callback_data="cpt3")
        keyboard.add(cpt1, cpt2, cpt3)
        cpt1 = types.InlineKeyboardButton(text=cp4, callback_data="cpt4")
        cpt2 = types.InlineKeyboardButton(text=cp5, callback_data="cpt5")
        cpt3 = types.InlineKeyboardButton(text=cp6, callback_data="cpt6")
        keyboard.add(cpt1, cpt2, cpt3)
        markdown = """
        *bold text*
        _italic text_
        [text](URL)
        """
        global emoji
        emoji = random.choice(captcha_list)
        global dostup
        dostup = 0
        # —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–ø—á–µ–π. ============================
        bot.send_message(message.chat.id, ' –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ' + '*' + emoji + '*', parse_mode="Markdown", reply_markup=keyboard)

# –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã ============================

@bot.message_handler(func=lambda message: message.text == 'üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')
def price22(message):
    bot.send_photo(message.chat.id, 'https://telegra.ph/file/9cab10363b1f4e43db85a.jpg' , caption=f'–û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–∫—É–ø–∫—É –≤—ã –º–æ–∂–µ—Ç–µ:\nüîπ –ù–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Å—á–µ—Ç –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã:\n\n>>> `{karta}` <<<\n\n(–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)\n*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ!*\n–¢–û–õ–¨–ö–û –î–õ–Ø –û–ü–õ–ê–¢–´ –ù–ê BTC\n–ò–ù–°–¢–†–£–ö–¶–ò–Ø –ö–ê–ö –ü–û–õ–¨–ó–û–í–ê–¢–¨–°–Ø –°–ï–†–í–ò–°–û–ú –û–ë–ú–ï–ù–ù–ò–ö–û–í:\n1.–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ https://www.bestchange.ru/list.html\n2.–í—ã–±–∏—Ä–∞–µ—Ç–µ –ª—é–±–æ–π –æ–±–º–µ–Ω–Ω–∏–∫ –∏–∑ —Å–ø–∏—Å–∫–∞\n3.–ü—Ä–∏ –ø–æ–º–æ—â–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –æ–±–º–µ–Ω–Ω–∏–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ –Ω—É–∂–Ω—É—é —Å—É–º–º—É –ø–æ —É–∫–∞–∑–∞–Ω–Ω—ã–º –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º\n4.–ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç–µ —Å—Å—ã–ª–∫—É(–º–æ–∂–Ω–æ —Å–∫—Ä–∏–Ω) —Å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–µ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä—É\n5.–•–æ—Ä–æ—à–æ –ø—Ä–æ–≤–æ–¥–∏—Ç–µ –≤—Ä–µ–º—è!\n\nüîπ –ù–∞ —Å—á–µ—Ç –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n\n>>> `–í–†–ï–ú–ï–ù–ù–û –ù–ï–î–û–°–¢–£–ü–ù–û` <<<\n\n(–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–ª–∞—Ç–µ–∂–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)\n*–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ!*\n–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–æ:\n- –û–Ω–ª–∞–π–Ω –±–∞–Ω–∫  --> –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã\n*–û–ø–ª–∞—Ç–∞ –¥—Ä—É–≥–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –Ω–µ –±—É–¥–µ—Ç –∑–∞—Å—á–∏—Ç–∞–Ω–∞!*\n\nüîπ –ù–∞ –∫–æ—à–µ–ª–µ–∫ Bitcoin', parse_mode="Markdown")

# –ü—Ä–∞–≤–∏–ª–∞ ============================

@bot.message_handler(func=lambda message: message.text == '‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è')
def rules(message):
    bot.send_message(message.chat.id, '–ü—Ä–∞–≤–∏–ª–∞:\n–ü–†–ê–í–ò–õ–ê –û–§–û–†–ú–õ–ï–ù–ò–Ø –ü–û–ö–£–ü–û–ö!\n1. –ü–µ—Ä–µ–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤ –º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –ª—é–±—ã–º –¥–æ—Å—Ç—É–ø–Ω—ã–º –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–±–æ–º. \n2. –°—É–º–º–∞ –ø–ª–∞—Ç–µ–∂–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–≤–Ω–æ–π —Å—É–º–º–µ —Ç–æ–≤–∞—Ä–∞. –ù–µ –±–æ–ª—å—à–µ –∏ –Ω–µ –º–µ–Ω—å—à–µ!\n3. –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ –Ω–∞ —Å—Ç–∞–¥–∏–∏ –∑–∞–∫–∞–∑–∞ –∏ –≤—ã –≤—ã–Ω—É–∂–¥–µ–Ω–Ω–æ –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –≤ –ø–æ–¥–µ—Ä–∂–∫—É - –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —Ñ–æ—Ç–æ –ª–∏–±–æ —Å–∫—Ä–∏–Ω –ø–ª–∞—Ç–µ–∂–∞!!! –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (–±—Ä–æ –ø–æ—Å–º–æ—Ç—Ä–∏ —Ç–∞–º –∂–µ –≤—Å–µ –≤–∏–¥–Ω–æ), (–±—Ä–æ –∞–ø–ø–∞—Ä–∞—Ç –Ω–µ –¥–∞–ª —á–µ–∫), (–±—Ä–æ —è –Ω–µ –∑–Ω–∞–ª —á—Ç–æ —Ç–∞–º –∫–æ–º–∏—Å–∏—è), (–±—Ä–æ –º—ã –Ω–∞ 300—Ä –±–æ–ª—å—à–µ –ø–æ–ª–æ–∂–∏–ª–∏ –∑–∞ —Å–µ—Ä–≤–∏—Å, –ø—Ä–æ–≤–µ—Ä—å –ø–æ–∂–∞–ª—É–π—Å—Ç–∞) - –°–†–ê–ó–£ –ë–ê–ù !!!\n4. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É—Ç–æ—á–Ω—è–π—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π! (–ù–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ –æ–ø–ª–∞—Ç–æ–π –æ—Ñ–æ—Ä–º–ª—è–π—Ç–µ —Å–¥–µ–ª–∫—É –≤ –±–æ—Ç–µ).\n\n–ü–†–ê–í–ò–õ–ê –û–ë–†–ê–©–ï–ù–ò–Ø –ö –ö–û–ù–°–£–õ–¨–¢–ê–ù–¢–£ –¢–ï–• –ü–û–î–ï–†–ñ–ö–ò.\n1. –ë—É–¥—Ç–µ –≤–µ–∂–ª–∏–≤—ã. \n2. –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ —Ç–∏–ø—É (–±—Ä–æ –∫–∞–∫ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ç—ã –Ω–µ —Ñ–µ–π–∫), (–±—Ä–æ –¥–∞–π –ø—Ä–æ–±—É —è –≤—Å–µ—Ö —Å–≤–æ–∏—Ö –ø–æ–¥—Ç—è–Ω—É), (–±—Ä–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç 100—Ä –¥–∞–π —Å–∫–∏–¥–∫—É), –∏ —Ç–¥. - –ü–û–ñ–ò–ó–ù–ï–ù–ù–´–ô –ë–ê–ù!!!\n3. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–Ω–∏—è –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É —Ç–µ—Ö –ø–æ–¥–µ—Ä–∂–∫–∏ –µ–º–∫–æ –∏ –ª–∞–∫–æ–Ω–∏—á–Ω–æ –≤–∫–ª–∞–¥—ã–≤–∞—è—Å—å –≤ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ! \n4. –û–±—Ä–∞—â–∞—Ç—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ç–æ–ª—å–∫–æ –ø–æ —Å—É—â–µ—Å—Ç–≤—É! ! ! \n5. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –Ω–µ –≤–µ–¥—ë—Ç –∏ –Ω–µ –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤! (–¢–æ–ª—å–∫–æ —Ä–µ—à–µ–Ω–∏–µ —Å–ø–æ—Ä–æ–≤).\n6. –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ —Ç–∞–∫–æ–π –º–∞–Ω–µ—Ä–µ –≤ –∫–æ—Ç–æ—Ä–æ–π –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–∞–º–∏ –≤–æ–ø—Ä–æ—Å!\n7. –§–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–Ω–∏—è –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç—É —Ç–µ—Ö –ø–æ–¥–µ—Ä–∂–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤ —Ç–µ—á–µ–Ω–∏–∏ 24 —á–∞—Å–æ–≤ —Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏!!!')

# –¢–ü ============================

@bot.message_handler(func=lambda message: message.text == 'üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©')
def helper(message):
    bot.send_message(message.chat.id, '–ù–∞—à–∞ üö®*—Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∞*üö®\n–î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è _—á–µ–∫–æ–≤ –æ–ø–ª–∞—Ç—ã_üëá\n\n@ShishTGNeW', parse_mode="Markdown" )

# –ö–∞–Ω–∞–ª –æ—Ç–∑—ã–≤–æ–≤ ============================

@bot.message_handler(func=lambda message: message.text == '‚úÖ–û–¢–ó–´–í–´‚úÖ')
def otzyv(message):
    otxyvssk = types.InlineKeyboardMarkup(row_width=1)
    otzyvlk = types.InlineKeyboardButton(url='https://t.me/+paDRDuEXZFMyMzVk', text='‚úÖ–û–¢–ó–´–í–´‚úÖ')
    otxyvssk.add(otzyvlk)
    bot.send_message(message.chat.id, '*–ö–∞–Ω–∞–ª —Å –æ—Ç–∑—ã–≤–∞–º–∏ –æ—Ç –Ω–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤*‚úÖüëá', parse_mode="Markdown", reply_markup=otxyvssk)

# –ö–∞–Ω–∞–ª –Ω–æ–≤–æ—Å—Ç–µ–π ============================

@bot.message_handler(func=lambda message: message.text == 'üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
def novost(message):
    novostyknop = types.InlineKeyboardMarkup(row_width=1)
    novostbut = types.InlineKeyboardButton(url='https://t.me/+ISjASiGoxxEwZWU0', text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
    novostyknop.add(novostbut)
    bot.send_message(message.chat.id, '–ù–∞—à *–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª* —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏‚ö†Ô∏èüëá', parse_mode="Markdown", reply_markup=novostyknop)

# –í—ã–±–æ—Ä –≥–æ—Ä–æ–¥–∞ ============================

@bot.message_handler(func=lambda message: message.text == 'üèò–ì–æ—Ä–æ–¥–∞')
def goroda(message):
    goroda2 = types.InlineKeyboardMarkup(row_width=1)
    Russia = types.InlineKeyboardButton(text='üèò–†–æ—Å—Å–∏—è', callback_data='rusgor')
    LPR = types.InlineKeyboardButton(text='üè°–õ–ù–†', callback_data='lprgor')
    DPR = types.InlineKeyboardButton(text='üè†–î–ù–†', callback_data='dprgor')
    goroda2.add(Russia, LPR, DPR)
    bot.send_photo(message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à —Ä–µ–≥–∏–æ–Ω:', reply_markup=goroda2 )

# –†–µ–≥–∏–æ–Ω—ã ============================

# –†–æ—Å—Å–∏—è ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'rusgor')
def russ(call):
    if call.data == 'rusgor':
        global region
        region = '–†–æ—Å—Å–∏—è'
        gorodarf = types.InlineKeyboardMarkup(row_width=1)
        msc = types.InlineKeyboardButton(text='–ú–æ—Å–∫–≤–∞', callback_data='msc2')
        rstv = types.InlineKeyboardButton(text='–†–æ—Å—Ç–æ–≤-–ù–∞-–î–æ–Ω—É', callback_data='rstv2')
        ryzan = types.InlineKeyboardButton(text='–†—è–∑–∞–Ω—å', callback_data='ryazan2')
        tagan = types.InlineKeyboardButton(text='–¢–∞–≥–∞–Ω—Ä–æ–≥', callback_data='tagan2')
        sarat = types.InlineKeyboardButton(text='–°–∞—Ä–∞—Ç–æ–≤', callback_data='sarat2')
        kras = types.InlineKeyboardButton(text='–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä', callback_data='kras2')
        piter = types.InlineKeyboardButton(text='–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥', callback_data='piter2')
        gorodarf.add(msc, piter, rstv, kras, ryzan, sarat, tagan)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=gorodarf) 

# –õ–ù–† ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'lprgor')
def lpr(call):
        if call.data == 'lprgor':
            global region
            region = '–õ–ù–†'
            gorodalpr = types.InlineKeyboardMarkup(row_width=1)
            lug = types.InlineKeyboardButton(text='–õ—É–≥–∞–Ω—Å–∫', callback_data='lug2')
            lutug = types.InlineKeyboardButton(text="–õ—É—Ç—É–≥–∏–Ω–æ", callback_data='lutug2')
            stah = types.InlineKeyboardButton(text='–°—Ç–∞—Ö–∞–Ω–æ–≤', callback_data='stah2')
            alch = types.InlineKeyboardButton(text='–ê–ª—á–µ–≤—Å–∫', callback_data='alch2')
            bryan = types.InlineKeyboardButton(text='–ë—Ä—è–Ω–∫–∞', callback_data='bryan2')
            gorodalpr.add(lug, lutug, stah, alch, bryan)
            bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=gorodalpr)

# –î–ù–† ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'dprgor')
def dpr(call):    
        if call.data == 'dprgor':
            global region
            region = '–î–ù–†'
            gorodadpr = types.InlineKeyboardMarkup(row_width=1)
            donec = types.InlineKeyboardButton(text='–î–æ–Ω–µ—Ü–∫', callback_data='donec2')
            makeev = types.InlineKeyboardButton(text='–ú–∞–∫–µ–µ–≤–∫–∞', callback_data='makeev2')
            gorlov = types.InlineKeyboardButton(text='–ì–æ—Ä–ª–æ–≤–∫–∞', callback_data='gorlov2')
            enakiev = types.InlineKeyboardButton(text='–ï–Ω–∞–∫–∏–µ–≤–æ', callback_data='enakiev2')
            gorodadpr.add(donec, makeev, gorlov, enakiev)
            bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption="–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥:", reply_markup=gorodadpr)

# –ì–æ—Ä–æ–¥–∞ –õ–ù–† ============================

# –°—Ç–∞—Ö–∞–Ω–æ–≤ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'stah2')
def mscd(call):
    if call.data == 'stah2':
        global city
        city = '–°—Ç–∞—Ö–∞–Ω–æ–≤'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        tovar.add(marih, gerka, alpha, meph, gash, meth)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar) 

# –ê–ª—á–µ–≤—Å–∫

@bot.callback_query_handler(func=lambda callback: callback.data == 'alch2')
def mscd(call):
    if call.data == 'alch2':
        global city
        city = '–ê–ª—á–µ–≤—Å–∫'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        tovar.add(marih, gerka, alpha, meph, gash, meth)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar) 

# –ë—Ä—è–Ω–∫–∞

@bot.callback_query_handler(func=lambda callback: callback.data == 'bryan2')
def mscd(call):
    if call.data == 'bryan2':
        global city
        city = '–ë—Ä—è–Ω–∫–∞'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        tovar.add(marih, gerka, alpha, meph, gash, meth)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar) 


# –õ—É—Ç—É–≥–∏–Ω–æ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'lutug2')
def mscd(call):
    if call.data == 'lutug2':
        global city
        city = '–õ—É—Ç—É–≥–∏–Ω–æ'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar) 

# –õ—É–≥–∞–Ω—Å–∫ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'lug2')
def mscd(call):
    if call.data == 'lug2':
        global city
        city = '–õ—É–≥–∞–Ω—Å–∫'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)     

# –ì–æ—Ä–æ–¥–∞ –î–ù–† ============================

# –î–æ–Ω–µ—Ü–∫ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'donec2')
def mscd(call):
    if call.data == 'donec2':
        global city
        city = '–î–æ–Ω–µ—Ü–∫'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)            

# –ú–∞–∫–µ–µ–≤–∫–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'makeev2')
def mscd(call):
    if call.data == 'makeev2':
        global city
        city = '–ú–∞–∫–µ–µ–≤–∫–∞'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)   

# –ì–æ—Ä–ª–æ–≤–∫–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'gorlov2')
def mscd(call):
    if call.data == 'gorlov2':
        global city
        city = '–ì–æ—Ä–ª–æ–≤–∫–∞'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)   

# –ï–Ω–∞–∫–∏–µ–≤–æ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'enakiev2')
def mscd(call):
    if call.data == 'enakiev2':
        global city
        city = '–ï–Ω–∞–∫–∏–µ–≤–æ'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)   


# –ì–æ—Ä–æ–¥–∞ –†–§ ============================

# –ú–æ—Å–∫–≤–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'msc2')
def mscd(call):
    if call.data == 'msc2':
        global city 
        city = '–ú–æ—Å–∫–≤–∞'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)

# –ü–∏—Ç–µ—Ä ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'piter2')
def mscd(call):
    if call.data == 'piter2':
        global city 
        city = '–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)


# –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'kras2')
def mscd(call):
    if call.data == 'kras2':
        global city
        city = '–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)        

# –†–æ—Å—Ç–æ–≤ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'rstv2')
def mscd(call):
    if call.data == 'rstv2':
        global city
        city = '–†–æ—Å—Ç–æ–≤-–ù–∞-–î–æ–Ω—É'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)

# –¢–∞–≥–∞–Ω—Ä–æ–≥ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'tagan2')
def mscd(call):
    if call.data == 'tagan2':
        global city
        city = '–¢–∞–≥–∞–Ω—Ä–æ–≥'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)

# –†—è–∑–∞–Ω—å ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'ryazan2')
def mscd(call):
    if call.data == 'ryazan2':
        global city
        city = '–†—è–∑–∞–Ω—å'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)

# –°–∞—Ä–∞—Ç–æ–≤ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'sarat2')
def mscd(call):
    if call.data == 'sarat2':
        global city
        city = '–°–∞—Ä–∞—Ç–æ–≤'
        tovar = types.InlineKeyboardMarkup(row_width=1)
        marih = types.InlineKeyboardButton(text='Marijuana gorilla glue', callback_data='marih2')
        gerka = types.InlineKeyboardButton(text='Heroin 999', callback_data='gerka2')
        alpha = types.InlineKeyboardButton(text='Alpha-PvP blue crystal', callback_data='alpha2')
        meph = types.InlineKeyboardButton(text='Mephedrone(Pacific) VHQ', callback_data='meph2')
        meth = types.InlineKeyboardButton(text='Methadone HQ', callback_data='meth2')
        gash = types.InlineKeyboardButton(text= "Hashish Isolator '65%'", callback_data='gash2')
        tovar.add(marih, gerka, alpha, meph, meth, gash)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ç–æ–≤–∞—Ä:', reply_markup=tovar)

# –ú–∞—Ä–∏—è ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'marih2')
def marihsar(call):
    if call.data == 'marih2':
        global tovarchik
        tovarchik = 'Marijuana gorilla glue'
        marihrac = types.InlineKeyboardMarkup(row_width=1)
        maria1 = types.InlineKeyboardButton(text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1–≥—Ä 2550—Äüí∏', callback_data='maria11')
        maria2 = types.InlineKeyboardButton(text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1.5–≥—Ä 3400püí∏', callback_data='maria21')
        maria3 = types.InlineKeyboardButton(text= 'üß≤–ú–∞–≥–Ω–∏—Ç 1.5–≥—Ä 3400püí∏', callback_data='maria31')
        maria4 = types.InlineKeyboardButton(text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 5–≥—Ä 8950püí∏', callback_data='maria41')
        maria5 = types.InlineKeyboardButton(text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 10–≥—Ä 13500püí∏', callback_data='maria51')
        marihrac.add(maria1, maria2, maria3, maria4, maria5)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=marihrac)

@bot.callback_query_handler(func=lambda callback: callback.data == 'maria11')
def marka(call):
    if call.data == 'maria11': #1 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')    
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `2550` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2550 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)
        
@bot.callback_query_handler(func=lambda callback: callback.data == 'maria21')
def marka(call):
    if call.data == 'maria21': # 1.5 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1.5 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `3400` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3400 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'maria31')
def marka(call):
    if call.data == 'maria31': # 1.5 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')      
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1.5 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `3400` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3400 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'maria41')
def marka(call):
    if call.data == 'maria41':  # 5 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')     
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 5 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `8950` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(8950 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'maria51')
def marka(call):
    if call.data == 'maria51': # 10 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 10 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `13500` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(13500 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



# –ì–µ—Ä–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data =='gerka2' )
def gerkach(call):
    if call.data == 'gerka2':
        global tovarchik
        tovarchik = 'Heroin 999'
        gerkaknop = types.InlineKeyboardMarkup(row_width=1)
        gerkas1 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 0.25–≥—Ä 2800püí∏', callback_data='gerkas41')
        gerkas2 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 0.5–≥—Ä 3700püí∏',callback_data='gerkas42')
        gerkas3 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 0.5–≥—Ä 3700püí∏', callback_data='gerkas43')
        gerkas4 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 2–≥—Ä 12200püí∏',callback_data='gerkas44')
        gerkaknop.add(gerkas1, gerkas2, gerkas3, gerkas4)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=gerkaknop)

@bot.callback_query_handler(func=lambda callback: callback.data == 'gerkas41')
def marka(call):
    if call.data == 'gerkas41': # 0.25 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.25 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `2800` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2800 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'gerkas42')
def marka(call):
    if call.data == 'gerkas42': # 0.5 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.5 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `3700` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3700 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'gerkas43')
def marka(call):
    if call.data == 'gerkas43': # 0.5 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.5 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `3700` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3700 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'gerkas44')
def marka(call):
    if call.data == 'gerkas44': # 2 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 2 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `12200` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(12200 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)


# –ê–ª—å—Ñ–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'alpha2')
def alphach(call):
    if call.data == 'alpha2':
        global tovarchik
        tovarchik = 'Alpha-PvP blue crystal'
        alphaknop = types.InlineKeyboardMarkup(row_width=1)
        alphak1 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1–≥—Ä 3300püí∏', callback_data='alphak11')
        alphak2 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 1–≥—Ä 3300püí∏', callback_data='alphak12')
        alphak3 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 2–≥—Ä 4800püí∏', callback_data='alphak13')
        alphaknop.add (alphak1, alphak2, alphak3)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=alphaknop)

@bot.callback_query_handler(func=lambda callback: callback.data == 'alphak11')
def marka(call):
    if call.data == 'alphak11': # 1 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `3300` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3300 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'alphak12')
def marka(call):
    if call.data == 'alphak12': # 1 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `3300` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3300 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'alphak13')
def marka(call):
    if call.data == 'alphak13': # 2 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 2 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `4800` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(4800 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

# –ú–µ—Ñ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'meph2')
def mephch(call):
    if call.data == 'meph2':
        global tovarchik
        tovarchik = 'Mephedrone(Pacific) VHQ'
        mephknop = types.InlineKeyboardMarkup(row_width=1)
        mephch1 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 0.5–≥—Ä 2350püí∏', callback_data='mephch11')
        mephch2 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 0.5–≥—Ä 2350püí∏', callback_data='mephch21')
        mephch3 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 0.7–≥—Ä 3200püí∏', callback_data='mephch31')
        mephch4 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1–≥—Ä 4350püí∏', callback_data='mephch41')
        mephch5 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 1–≥—Ä 4350püí∏', callback_data='mephch51')
        mephknop.add(mephch1, mephch2, mephch3, mephch4, mephch5)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=mephknop)

@bot.callback_query_handler(func=lambda callback: callback.data == 'mephch11')
def marka(call):
    if call.data == 'mephch11': # 0.5 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.5 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `2350` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2350 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'mephch21')
def marka(call):
    if call.data == 'mephch21': # 0.5 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.5 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `2350` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2350 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'mephch31')
def marka(call):
    if call.data == 'mephch31': # 0.7 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')        
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 0.7 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `3200` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(3200 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'mephch41')
def marka(call):
    if call.data == 'mephch41':  # 1 gramm
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_ \n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `4350` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(4350 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'mephch51')
def marka(call):
    if call.data == 'mephch51':  # 1 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `4350` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(4350 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

# –ú–µ—Ç ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'meth2')
def mephch(call):
    if call.data == 'meth2':
        global tovarchik
        tovarchik = 'Methadone HQ'
        methknop = types.InlineKeyboardMarkup(row_width=1)
        methch1 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 0.35–≥—Ä 7000püí∏', callback_data='methch11')
        methch2 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 0.35–≥—Ä 7000püí∏', callback_data='methch21')
        methch3 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 0.75–≥—Ä 11500püí∏', callback_data='methch31')
        methch4 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 0.75–≥—Ä 11500püí∏', callback_data='methch41')
        methch5 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1–≥—Ä 14500püí∏', callback_data='methch51')
        methch6 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 1–≥—Ä 14500püí∏', callback_data='methch61')
        methknop.add(methch1, methch2, methch3, methch4, methch5, methch6)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=methknop)



@bot.callback_query_handler(func=lambda callback: callback.data == 'methch11')
def marka(call):
    if call.data == 'methch11':  # 0.35 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 0.35 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `7000` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(7000 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'methch21')
def marka(call):
    if call.data == 'methch21':  # 0.35 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 0.35 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `7000` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(7000 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'methch31')
def marka(call):
    if call.data == 'methch31':  # 0.75 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 0.75 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `11500` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(11500 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'methch41')
def marka(call):
    if call.data == 'methch41':  # 0.75 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 0.75 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `11500` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(11500 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'methch51')
def marka(call):
    if call.data == 'methch51':  # 1 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `14500` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(14500 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

@bot.callback_query_handler(func=lambda callback: callback.data == 'methch61')
def marka(call):
    if call.data == 'methch61':  # 1 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `14500` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(14500 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)

# –ì–∞—à ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'gash2')
def mephch(call):
    if call.data == 'gash2':
        global tovarchik
        tovarchik = "Hashish Isolator '65%'"
        gashknop = types.InlineKeyboardMarkup(row_width=1)
        gash11 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 1–≥—Ä 2800püí∏', callback_data='gashch11')
        gash22 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 1–≥—Ä 2800püí∏', callback_data='gashch21')
        gash33 = types.InlineKeyboardButton (text= '‚öñÔ∏è–¢–∞–π–Ω–∏–∫ 2–≥—Ä 5300püí∏', callback_data='gashch31')
        gash44 = types.InlineKeyboardButton (text= 'üß≤–ú–∞–≥–Ω–∏—Ç 2–≥—Ä 5300püí∏', callback_data='gashch41')
        gashknop.add(gash11, gash22, gash33, gash44)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption='–í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Å –∏ —Ç–∏–ø:\n\n(–î–ª—è –±–æ–ª—å—à–µ–≥–æ –≤–µ—Å–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫—É)', reply_markup=gashknop)



@bot.callback_query_handler(func=lambda callback: callback.data == 'gashch11')
def marka(call):
    if call.data == 'gashch11':  # 1 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `2800` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2800 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'gashch21')
def marka(call):
    if call.data == 'gashch21':  # 1 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 1 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `2800` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(2800 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'gashch31')
def marka(call):
    if call.data == 'gashch31':  # 2 gramm 
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 2 –≥—Ä.\n*–¢–∏–ø*: _{tayh}_\n*–¶–µ–Ω–∞*: `5300` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(5300 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)



@bot.callback_query_handler(func=lambda callback: callback.data == 'gashch41')
def marka(call):
    if call.data == 'gashch41':  # 2 gramm magnite
        oplata = types.InlineKeyboardMarkup(row_width=1)
        crypt = types.InlineKeyboardButton (text='üí∞BTCüí∞', callback_data='crypt1')
        card = types.InlineKeyboardButton (text= 'üí≥–ü–µ—Ä–µ–≤–æ–¥ –Ω–∞ –∫–∞—Ä—Ç—Éüí≥', callback_data='card1')       
        oplata.add(card, crypt)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id, caption=f'*–í–∞—à –∑–∞–∫–∞–∑* :\n===============\n*–†–µ–≥–∏–æ–Ω*: _{region}_\n*–ì–æ—Ä–æ–¥*: _{city}_\n*–¢–æ–≤–∞—Ä*: _{tovarchik}_\n*–í–µ—Å*: 2 –≥—Ä.\n*–¢–∏–ø*: _{mag}_\n*–¶–µ–Ω–∞*: `5300` —Ä—É–±.\n*–¶–µ–Ω–∞ –≤ BTC*:  `{(5300 * (1 / price)):.10f}` BTC\n===============\n–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ãüëá', parse_mode="Markdown", reply_markup=oplata)


# –û–ø–ª–∞—Ç–∞ ============================

@bot.callback_query_handler(func=lambda callback: callback.data == 'crypt1')
def crypton(call):
    if call.data =='crypt1':
        checksup = types.InlineKeyboardMarkup(row_width=1)
        support = types.InlineKeyboardButton(url='https://t.me/ShishTGNeW', text='–û—Ç—Ä–∞–≤–∏—Ç—å —á–µ–∫üì©')
        checksup.add(support)
        bot.send_message(call.message.chat.id, text=f'–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º:\n\n1.–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å —Ç–æ—á–Ω–æ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ –Ω–∞ BTC-–ê–¥—Ä–µ—Å:\n\n===============\n`bc1q3x35zzvwwpz5s3v0yrxwtkngt70njnhfx7pug3`\n===============\n\n2.–û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º* –∏ *—Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–æ–º* –º–µ–Ω–µ–¥–∂–µ—Ä—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω *–æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∞–¥–∞*üëá\n\n*‚ùóÔ∏è–í–ê–ñ–ù–û‚ùóÔ∏è–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –∑–∞–∫–∞–∑–µ*\n\n–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å –±–∏—Ç–∫–æ–∏–Ω–∞ ‚Äî 1 BTC = {price} RUB', parse_mode="Markdown", reply_markup=checksup)

@bot.callback_query_handler(func=lambda callback: callback.data == 'card1')
def crypton(call):
    if call.data == 'card1':
        checksup = types.InlineKeyboardMarkup(row_width=1)
        support = types.InlineKeyboardButton(url='https://t.me/ShishTGNeW', text='–û—Ç—Ä–∞–≤–∏—Ç—å —á–µ–∫üì©')
        checksup.add(support)
        bot.send_message(call.message.chat.id, text=f'–î–ª—è –æ–ø–ª–∞—Ç—ã –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω—ã–º –º–µ—Ç–æ–¥–æ–º:\n\n1.–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ —Å —Ç–æ—á–Ω–æ–π —Å—É–º–º–æ–π –∑–∞–∫–∞–∑–∞ –Ω–∞ –∫–∞—Ä—Ç—É:\n\n=====================\n`{karta}`\n=====================\n\n2.–û—Ç–ø—Ä–∞–≤—å—Ç–µ *—Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–∞—à–∏–º –∑–∞–∫–∞–∑–æ–º* –∏ *—Å–∫—Ä–∏–Ω—à–æ—Ç —Å –ø–µ—Ä–µ–≤–æ–¥–æ–º* –º–µ–Ω–µ–¥–∂–µ—Ä—É, –ø–æ—Å–ª–µ —á–µ–≥–æ –æ–Ω *–æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª–∞–¥–∞*üëá\n\n*‚ùóÔ∏è–í–ê–ñ–ù–û‚ùóÔ∏è–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Ç–æ—á–Ω—É—é —Å—É–º–º—É, —É–∫–∞–∑–∞–Ω–Ω—É—é –≤ –∑–∞–∫–∞–∑–µ*', parse_mode="Markdown", reply_markup=checksup)

# –î–æ—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–ø—á–∏ ========================================================================

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "cpt1":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)   
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
            else:
                check = captcha_list[0:1]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                else:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')
        if call.data == "cpt2":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)  
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                completecaptcga.append(call.message.chat.id)
            else:
                check = captcha_list[1:2]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                if emoji != check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')
        if call.data == "cpt3":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)  
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                completecaptcga.append(call.message.chat.id)
            else:
                check = captcha_list[2:3]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                if emoji != check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')
        if call.data == "cpt4":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)  
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                completecaptcga.append(call.message.chat.id)
            else:
                check = captcha_list[3:4]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                if emoji != check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')
        if call.data == "cpt5":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)  
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                completecaptcga.append(call.message.chat.id)
            else:
                check = captcha_list[4:5]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                if emoji != check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')
        if call.data == "cpt6":
            ms = call.message.chat.id
            if ms in completecaptcga:
                bot.send_message(call.message.chat.id, '–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –∫–∞–ø—á—É!')
                keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                keyboard.add(button1, button5)
                keyboard.add(button4, button3)
                keyboard.add(button6, button2)  
                bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                completecaptcga.append(call.message.chat.id)
            else:
                check = captcha_list[5:6]
                check = check[0]
                if emoji == check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
                    button4 = telebot.types.KeyboardButton(text="‚ùóÔ∏è–ü–†–ê–í–ò–õ–ê‚ùóÔ∏è")
                    button1 = telebot.types.KeyboardButton(text="üèò–ì–æ—Ä–æ–¥–∞")
                    button2 = telebot.types.KeyboardButton(text="‚úÖ–û–¢–ó–´–í–´‚úÖ")
                    button3 = telebot.types.KeyboardButton(text="üì©–¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞üì©")
                    button5 = telebot.types.KeyboardButton(text='üí∏ –°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã')#–ì–æ—Ç–æ–≤–∞
                    button6 = telebot.types.KeyboardButton(text='üì¨–ù–æ–≤–æ—Å—Ç–∏üì¨')
                    keyboard.add(button1, button5)
                    keyboard.add(button4, button3)
                    keyboard.add(button6, button2)  
                    bot.send_photo(call.message.chat.id, 'https://telegra.ph/file/863c21d7cc2b0928146be.jpg', caption="–û–î–ò–ù –ò–ó –ö–†–£–ü–ù–ï–ô–®–ò–• –®–û–ü–û–í\n    ======üåø SHISH üåø======\n–í–µ—Ä–Ω—É–ª—Å—è –ø–æ—Å–ª–µ –∑–∞–∫—Ä—ã—Ç–∏—è Hydra\n    üì±–ù–∞ –ø—Ä–æ—Å—Ç–æ—Ä—ã Telegramüì±\n‚úÖ–ì–æ—Ç–æ–≤—ã —Å–Ω–æ–≤–∞ —Ä–∞–¥–æ–≤–∞—Ç—å –≤–∞—Å ‚úÖ\n  ‚úÖ–ü–µ—Ä–≤–æ–∫–ª–∞—Å—Å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º‚úÖ\n     üíµ–ü–æ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ü–µ–Ω–∞–ºüíµ", reply_markup=keyboard)
                    completecaptcga.append(call.message.chat.id)
                if emoji != check:
                    bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text='–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–µ –Ω–∞ —Ç–æ—Ç —Å–∏–º–≤–æ–ª!')

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ =================================================

print('START')
bot.polling(non_stop=True)

